diff -purN m4-1.4.18/lib/getprogname.c m4-1.4.18-patched/lib/getprogname.c
--- m4-1.4.18/lib/getprogname.c	2016-12-31 05:54:41.000000000 -0800
+++ m4-1.4.18-patched/lib/getprogname.c	2018-03-06 10:01:36.350222349 -0800
@@ -43,6 +43,14 @@
 # include <string.h>
 #endif
 
+#if defined (__sgi) || defined (__osf__)
+# include <string.h>
+# include <unistd.h>
+# include <stdio.h>
+# include <fcntl.h>
+# include <sys/procfs.h>
+#endif
+
 #include "dirname.h"
 
 #ifndef HAVE_GETPROGNAME             /* not Mac OS X, FreeBSD, NetBSD, OpenBSD >= 5.4, Cygwin */
@@ -143,6 +151,32 @@ getprogname (void)
       free (buf.ps_pathptr);
     }
   return p;
+# elif defined (__sgi) || defined (__osf__) /* IRIX | Tru64 */
+  char filename[50];
+  int fd;
+
+  sprintf (filename, "/proc/pinfo/%d", (int) getpid ());
+  fd = open (filename, O_RDONLY);
+  if (0 <= fd)
+    {
+      prpsinfo_t buf;
+      int ioctl_ok = 0 <= ioctl (fd, PIOCPSINFO, &buf);
+      close (fd);
+      if (ioctl_ok)
+        {
+          char *name = buf.pr_fname;
+          size_t namesize = sizeof buf.pr_fname;
+          char *namenul = memchr (name, '\0', namesize);
+          size_t namelen = namenul ? namenul - name : namesize;
+          char *namecopy = malloc (namelen + 1);
+          if (namecopy)
+            {
+              namecopy[namelen] = 0;
+              return memcpy (namecopy, name, namelen);
+            }
+        }
+    }
+  return NULL;
 # else
 #  error "getprogname module not ported to this OS"
 # endif
